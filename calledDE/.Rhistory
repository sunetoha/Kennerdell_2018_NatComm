gel267_HA <- read.csv("Gel267_HA.csv", header=F)
gel267_tub<- read.csv("Gel267_tub.csv", header=F)
# Chunk 3
dat <- rbind(gel251_HA, gel251_tub, gel264_HA, gel264_tub,
gel265_HA, gel265_tub, gel266_HA, gel266_tub,
gel267_HA, gel267_tub)
colnames(dat) <- c("group", "signal", "sample", "replicate", "band", "gel")
# Remove heterozygotes
dat <- dat[!grepl("/", dat$group),]
# Remove 5905 controls
dat <- dat[!grepl("5905", dat$group),]
dat$genotype <- ifelse(grepl("_", dat$group), "miR-34", "wild-type")
dat$genotype <- factor(dat$genotype, levels = c("wild-type", "miR-34"))
dat$utr <- ifelse(grepl("Nsi", dat$group), "mutated", "wild-type")
dat$utr <- factor(dat$utr, levels=c("wild-type", "mutated"))
dat$age <- ifelse(grepl("^3d ", dat$group), "3", "20")
dat$age <- factor(dat$age, levels = c("3", "20"))
dat$replicate <- factor(dat$replicate)
# Normalize each replicate on each gel:
dat$batch <- paste0(dat$utr, dat$replicate, dat$gel)
dat_cast <- dcast(dat, age + genotype + batch + utr + replicate ~ band, value.var="signal")
dat_cast$ratio <- dat_cast$HA/dat_cast$tub
# Chunk 4
# Normalize across gels by setting total ratio of HA:tub in each gel to 1:
ratio_sums <- numeric(12)
ratio_sums[1] <- sum(dat_cast[dat_cast$batch == "mutatedIGel251", 8])
ratio_sums[2] <- sum(dat_cast[dat_cast$batch == "mutatedIGel267", 8])
ratio_sums[3] <- sum(dat_cast[dat_cast$batch == "mutatedIIGel264", 8])
ratio_sums[4] <- sum(dat_cast[dat_cast$batch == "mutatedIIGel267", 8])
ratio_sums[5] <- sum(dat_cast[dat_cast$batch == "mutatedIIIGel265", 8])
ratio_sums[6] <- sum(dat_cast[dat_cast$batch == "mutatedIIIGel267", 8])
ratio_sums[7] <- sum(dat_cast[dat_cast$batch == "wild-typeIGel251", 8])
ratio_sums[8] <- sum(dat_cast[dat_cast$batch == "wild-typeIGel266", 8])
ratio_sums[9] <- sum(dat_cast[dat_cast$batch == "wild-typeIIGel264", 8])
ratio_sums[10] <- sum(dat_cast[dat_cast$batch == "wild-typeIIGel266", 8])
ratio_sums[11] <- sum(dat_cast[dat_cast$batch == "wild-typeIIIGel265", 8])
ratio_sums[12] <- sum(dat_cast[dat_cast$batch == "wild-typeIIIGel266", 8])
dat_cast$ratio_sums <- rep(ratio_sums, 4)
dat_cast$ratio_norm <- dat_cast$ratio / dat_cast$ratio_sums
# Check that the math worked:
all(as.logical(
sum(dat_cast[dat_cast$batch == "mutatedIGel251", 10]),
sum(dat_cast[dat_cast$batch == "mutatedIGel267", 10]),
sum(dat_cast[dat_cast$batch == "mutatedIIGel264", 10]),
sum(dat_cast[dat_cast$batch == "mutatedIIGel267", 10]),
sum(dat_cast[dat_cast$batch == "mutatedIIIGel265", 10]),
sum(dat_cast[dat_cast$batch == "mutatedIIIGel267", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIGel251", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIGel266", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIIGel264", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIIGel266", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIIIGel265", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIIIGel266", 10])
))
# Chunk 5
# Average the two technical repeats
sum_dat <- ddply(dat_cast, .(age, genotype, utr, replicate), summarize,
techMean = mean(ratio_norm))
# Set up a group for each of the three biological replicates:
sum_dat$group <- paste0(sum_dat$genotype, " ", sum_dat$age, "d")
sum_dat$group <- factor(sum_dat$group, levels = c("wild-type 3d",
"miR-34 3d",
"wild-type 20d",
"miR-34 20d"))
# Chunk 6
dat_wtUTR <- ddply(sum_dat[sum_dat$utr=="wild-type",], .(age, genotype, group), summarize,
mean = mean(techMean),
sd = sd(techMean),
n = length(techMean))
# Add max and min as the standard error (sd/sqrt(n))
dat_wtUTR$se_max <- dat_wtUTR$mean + dat_wtUTR$sd/sqrt(dat_wtUTR$n)
dat_wtUTR$se_min <- dat_wtUTR$mean - dat_wtUTR$sd/sqrt(dat_wtUTR$n)
dat_wtUTR
# Chunk 7
# Two way with interaction:
fit <- aov(techMean ~ genotype * age,
data = sum_dat[sum_dat$utr=="wild-type",])
summary(fit)
post_test <- TukeyHSD(fit)
post_test
leveneTest(techMean ~ genotype * age,
data = sum_dat[sum_dat$utr=="wild-type",])
shapiro.test(fit$residuals)
# One way
fit <- aov(techMean ~ group, dat = sum_dat[sum_dat$utr=="wild-type",])
summary(fit)
post_test <- TukeyHSD(fit)
post_test
leveneTest(techMean ~ group,
data = sum_dat[sum_dat$utr=="wild-type",])
shapiro.test(fit$residuals)
# Chunk 8
theme_Publication <- function(base_size=14, base_family="Arial") {
library(grid)
library(ggthemes)
(theme_foundation(base_size=base_size, base_family=base_family)
+ theme(plot.title = element_text(face = "bold",
size = rel(1.2), hjust = 0.5),
text = element_text(),
panel.background = element_rect(colour = NA),
plot.background = element_rect(colour = NA),
panel.border = element_rect(colour = NA),
axis.title = element_text(face = "bold",size = rel(1)),
axis.title.y = element_text(angle=90,vjust =2),
axis.title.x = element_text(vjust = -0.2),
axis.text = element_text(),
axis.line = element_line(colour="#000000"),
axis.ticks = element_line(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.key = element_rect(colour = NA),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.size= unit(0.2, "cm"),
#legend.margin = unit(0, "cm"),
legend.title = element_text(face="italic"),
plot.margin=unit(c(10,5,5,5),"mm"),
strip.background=element_rect(colour="#f0f0f0",
fill="#f0f0f0"),
strip.text = element_text(face="bold")
))
}
rm(list=ls())
# Chunk 1
library(ggplot2); library(reshape2);library(plyr); library(car)
# Chunk 2
setwd("~/Box Sync/PRC2_paper/construction_files/Suz12_in_brain/R_analysis")
gel251_HA <- read.csv("Gel251_HA.csv", header=F)
gel251_tub<- read.csv("Gel251_tub.csv", header=F)
gel264_HA <- read.csv("Gel264_HA.csv", header=F)
gel264_tub<- read.csv("Gel264_tub.csv", header=F)
gel265_HA <- read.csv("Gel265_HA.csv", header=F)
gel265_tub<- read.csv("Gel265_tub.csv", header=F)
gel266_HA <- read.csv("Gel266_HA.csv", header=F)
gel266_tub<- read.csv("Gel266_tub.csv", header=F)
gel267_HA <- read.csv("Gel267_HA.csv", header=F)
gel267_tub<- read.csv("Gel267_tub.csv", header=F)
# Chunk 3
dat <- rbind(gel251_HA, gel251_tub, gel264_HA, gel264_tub,
gel265_HA, gel265_tub, gel266_HA, gel266_tub,
gel267_HA, gel267_tub)
colnames(dat) <- c("group", "signal", "sample", "replicate", "band", "gel")
# Remove heterozygotes
dat <- dat[!grepl("/", dat$group),]
# Remove 5905 controls
dat <- dat[!grepl("5905", dat$group),]
dat$genotype <- ifelse(grepl("_", dat$group), "miR-34", "wild-type")
dat$genotype <- factor(dat$genotype, levels = c("wild-type", "miR-34"))
dat$utr <- ifelse(grepl("Nsi", dat$group), "mutated", "wild-type")
dat$utr <- factor(dat$utr, levels=c("wild-type", "mutated"))
dat$age <- ifelse(grepl("^3d ", dat$group), "3", "20")
dat$age <- factor(dat$age, levels = c("3", "20"))
dat$replicate <- factor(dat$replicate)
# Normalize each replicate on each gel:
dat$batch <- paste0(dat$utr, dat$replicate, dat$gel)
dat_cast <- dcast(dat, age + genotype + batch + utr + replicate ~ band, value.var="signal")
dat_cast$ratio <- dat_cast$HA/dat_cast$tub
# Chunk 4
# Normalize across gels by setting total ratio of HA:tub in each gel to 1:
ratio_sums <- numeric(12)
ratio_sums[1] <- sum(dat_cast[dat_cast$batch == "mutatedIGel251", 8])
ratio_sums[2] <- sum(dat_cast[dat_cast$batch == "mutatedIGel267", 8])
ratio_sums[3] <- sum(dat_cast[dat_cast$batch == "mutatedIIGel264", 8])
ratio_sums[4] <- sum(dat_cast[dat_cast$batch == "mutatedIIGel267", 8])
ratio_sums[5] <- sum(dat_cast[dat_cast$batch == "mutatedIIIGel265", 8])
ratio_sums[6] <- sum(dat_cast[dat_cast$batch == "mutatedIIIGel267", 8])
ratio_sums[7] <- sum(dat_cast[dat_cast$batch == "wild-typeIGel251", 8])
ratio_sums[8] <- sum(dat_cast[dat_cast$batch == "wild-typeIGel266", 8])
ratio_sums[9] <- sum(dat_cast[dat_cast$batch == "wild-typeIIGel264", 8])
ratio_sums[10] <- sum(dat_cast[dat_cast$batch == "wild-typeIIGel266", 8])
ratio_sums[11] <- sum(dat_cast[dat_cast$batch == "wild-typeIIIGel265", 8])
ratio_sums[12] <- sum(dat_cast[dat_cast$batch == "wild-typeIIIGel266", 8])
dat_cast$ratio_sums <- rep(ratio_sums, 4)
dat_cast$ratio_norm <- dat_cast$ratio / dat_cast$ratio_sums
# Check that the math worked:
all(as.logical(
sum(dat_cast[dat_cast$batch == "mutatedIGel251", 10]),
sum(dat_cast[dat_cast$batch == "mutatedIGel267", 10]),
sum(dat_cast[dat_cast$batch == "mutatedIIGel264", 10]),
sum(dat_cast[dat_cast$batch == "mutatedIIGel267", 10]),
sum(dat_cast[dat_cast$batch == "mutatedIIIGel265", 10]),
sum(dat_cast[dat_cast$batch == "mutatedIIIGel267", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIGel251", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIGel266", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIIGel264", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIIGel266", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIIIGel265", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIIIGel266", 10])
))
# Chunk 5
# Average the two technical repeats
sum_dat <- ddply(dat_cast, .(age, genotype, utr, replicate), summarize,
techMean = mean(ratio_norm))
# Set up a group for each of the three biological replicates:
sum_dat$group <- paste0(sum_dat$genotype, " ", sum_dat$age, "d")
sum_dat$group <- factor(sum_dat$group, levels = c("wild-type 3d",
"miR-34 3d",
"wild-type 20d",
"miR-34 20d"))
# Chunk 6
dat_wtUTR <- ddply(sum_dat[sum_dat$utr=="wild-type",], .(age, genotype, group), summarize,
mean = mean(techMean),
sd = sd(techMean),
n = length(techMean))
# Add max and min as the standard error (sd/sqrt(n))
dat_wtUTR$se_max <- dat_wtUTR$mean + dat_wtUTR$sd/sqrt(dat_wtUTR$n)
dat_wtUTR$se_min <- dat_wtUTR$mean - dat_wtUTR$sd/sqrt(dat_wtUTR$n)
dat_wtUTR
# Chunk 7
# Two way with interaction:
fit <- aov(techMean ~ genotype * age,
data = sum_dat[sum_dat$utr=="wild-type",])
summary(fit)
post_test <- TukeyHSD(fit)
post_test
leveneTest(techMean ~ genotype * age,
data = sum_dat[sum_dat$utr=="wild-type",])
shapiro.test(fit$residuals)
# One way
fit <- aov(techMean ~ group, dat = sum_dat[sum_dat$utr=="wild-type",])
summary(fit)
post_test <- TukeyHSD(fit)
post_test
leveneTest(techMean ~ group,
data = sum_dat[sum_dat$utr=="wild-type",])
shapiro.test(fit$residuals)
# Chunk 8
theme_Publication <- function(base_size=14, base_family="Arial") {
library(grid)
library(ggthemes)
(theme_foundation(base_size=base_size, base_family=base_family)
+ theme(plot.title = element_text(face = "bold",
size = rel(1.2), hjust = 0.5),
text = element_text(),
panel.background = element_rect(colour = NA),
plot.background = element_rect(colour = NA),
panel.border = element_rect(colour = NA),
axis.title = element_text(face = "bold",size = rel(1)),
axis.title.y = element_text(angle=90,vjust =2),
axis.title.x = element_text(vjust = -0.2),
axis.text = element_text(),
axis.line = element_line(colour="#000000"),
axis.ticks = element_line(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.key = element_rect(colour = NA),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.size= unit(0.2, "cm"),
#legend.margin = unit(0, "cm"),
legend.title = element_text(face="italic"),
plot.margin=unit(c(10,5,5,5),"mm"),
strip.background=element_rect(colour="#f0f0f0",
fill="#f0f0f0"),
strip.text = element_text(face="bold")
))
}
dat_wtUTR$adjMean <- dat_wtUTR$mean/dat_wtUTR$mean[1]
dat_wtUTR$adjSd <- dat_wtUTR$sd/dat_wtUTR$mean[1]
dat_wtUTR$adjSe_max <- dat_wtUTR$adjMean + dat_wtUTR$adjSd/sqrt(dat_wtUTR$n)
dat_wtUTR$adjSe_min <- dat_wtUTR$adjMean - dat_wtUTR$adjSd/sqrt(dat_wtUTR$n)
i <- ggplot(dat_wtUTR, aes(x=group, y=adjMean))
i <- i + geom_bar(stat = "identity")
i <- i + geom_errorbar(aes(ymin=dat_wtUTR$adjSe_min,
ymax=dat_wtUTR$adjSe_max,
width=.33))
i <- i + xlab("") + ylab("Su(z)12 normalized to tubulin")
i <- i + ggtitle("Brain Su(z)12 C-term HA levels")
i <- i + theme_Publication()
i <- i + scale_x_discrete(labels = c(bquote(atop(italic("wild-type"), "3d")),
bquote(atop(italic("miR-34"*Delta), " 3d")),
bquote(atop(italic("wild-type"), "20d")),
bquote(atop(italic("miR-34"*Delta), " 20d"))))
i <- i + scale_y_continuous(breaks=c(0, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5),
limits=c(0, 1.65))
i
ggsave("Fig_3B_resub.jpg", i, height = 4, width = 5)
write.csv(file="wtUTR.csv", dat_wtUTR)
save.image(file="Fig3B_wt_resub.RData")
rm(list=ls())
i <- ggplot(dat_mutUTR, aes(x=group, y=adjMean))
i <- i + geom_bar(stat = "identity")
i <- i + geom_errorbar(aes(ymin=dat_mutUTR$adjSe_min,
ymax=dat_mutUTR$adjSe_max,
width=.33))
i <- i + xlab("") + ylab("Su(z)12 normalized to tubulin")
i <- i + ggtitle("Brain Su(z)12 C-term sm HA levels")
i <- i + scale_x_discrete(labels = c(bquote(atop(italic("wild-type"), "3d")),
bquote(atop(italic("miR-34"*Delta), " 3d")),
bquote(atop(italic("wild-type"), "20d")),
bquote(atop(italic("miR-34"*Delta), " 20d"))))
i <- i + scale_y_continuous(breaks=c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5),
limits=c(0, 1.45))
i
# Chunk 1
library(ggplot2); library(reshape2);library(plyr); library(car)
# Chunk 2
setwd("~/Box Sync/PRC2_paper/construction_files/Suz12_in_brain/R_analysis")
gel251_HA <- read.csv("Gel251_HA.csv", header=F)
gel251_tub<- read.csv("Gel251_tub.csv", header=F)
gel264_HA <- read.csv("Gel264_HA.csv", header=F)
gel264_tub<- read.csv("Gel264_tub.csv", header=F)
gel265_HA <- read.csv("Gel265_HA.csv", header=F)
gel265_tub<- read.csv("Gel265_tub.csv", header=F)
gel266_HA <- read.csv("Gel266_HA.csv", header=F)
gel266_tub<- read.csv("Gel266_tub.csv", header=F)
gel267_HA <- read.csv("Gel267_HA.csv", header=F)
gel267_tub<- read.csv("Gel267_tub.csv", header=F)
# Chunk 3
dat <- rbind(gel251_HA, gel251_tub, gel264_HA, gel264_tub,
gel265_HA, gel265_tub, gel266_HA, gel266_tub,
gel267_HA, gel267_tub)
colnames(dat) <- c("group", "signal", "sample", "replicate", "band", "gel")
# Remove heterozygotes
dat <- dat[!grepl("/", dat$group),]
# Romove 5905 controls
dat <- dat[!grepl("5905", dat$group),]
dat$genotype <- ifelse(grepl("_", dat$group), "miR-34", "wild-type")
dat$genotype <- factor(dat$genotype, levels = c("wild-type", "miR-34"))
dat$utr <- ifelse(grepl("Nsi", dat$group), "mutated", "wild-type")
dat$utr <- factor(dat$utr, levels=c("wild-type", "mutated"))
dat$age <- ifelse(grepl("^3d ", dat$group), "3", "20")
dat$age <- factor(dat$age, levels = c("3", "20"))
dat$replicate <- factor(dat$replicate)
# Normalize each replicate on each gel:
dat$batch <- paste0(dat$utr, dat$replicate, dat$gel)
dat_cast <- dcast(dat, age + genotype + batch + utr + replicate ~ band, value.var="signal")
dat_cast$ratio <- dat_cast$HA/dat_cast$tub
# Chunk 4
# Normalize across gels by setting total ratio of HA:tub in each gel to 1:
ratio_sums <- numeric(12)
ratio_sums[1] <- sum(dat_cast[dat_cast$batch == "mutatedIGel251", 8])
ratio_sums[2] <- sum(dat_cast[dat_cast$batch == "mutatedIGel267", 8])
ratio_sums[3] <- sum(dat_cast[dat_cast$batch == "mutatedIIGel264", 8])
ratio_sums[4] <- sum(dat_cast[dat_cast$batch == "mutatedIIGel267", 8])
ratio_sums[5] <- sum(dat_cast[dat_cast$batch == "mutatedIIIGel265", 8])
ratio_sums[6] <- sum(dat_cast[dat_cast$batch == "mutatedIIIGel267", 8])
ratio_sums[7] <- sum(dat_cast[dat_cast$batch == "wild-typeIGel251", 8])
ratio_sums[8] <- sum(dat_cast[dat_cast$batch == "wild-typeIGel266", 8])
ratio_sums[9] <- sum(dat_cast[dat_cast$batch == "wild-typeIIGel264", 8])
ratio_sums[10] <- sum(dat_cast[dat_cast$batch == "wild-typeIIGel266", 8])
ratio_sums[11] <- sum(dat_cast[dat_cast$batch == "wild-typeIIIGel265", 8])
ratio_sums[12] <- sum(dat_cast[dat_cast$batch == "wild-typeIIIGel266", 8])
dat_cast$ratio_sums <- rep(ratio_sums, 4)
dat_cast$ratio_norm <- dat_cast$ratio / dat_cast$ratio_sums
# Check that the math worked:
all(as.logical(
sum(dat_cast[dat_cast$batch == "mutatedIGel251", 10]),
sum(dat_cast[dat_cast$batch == "mutatedIGel267", 10]),
sum(dat_cast[dat_cast$batch == "mutatedIIGel264", 10]),
sum(dat_cast[dat_cast$batch == "mutatedIIGel267", 10]),
sum(dat_cast[dat_cast$batch == "mutatedIIIGel265", 10]),
sum(dat_cast[dat_cast$batch == "mutatedIIIGel267", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIGel251", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIGel266", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIIGel264", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIIGel266", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIIIGel265", 10]),
sum(dat_cast[dat_cast$batch == "wild-typeIIIGel266", 10])
))
# Chunk 5
# Average the two technical repeats
sum_dat <- ddply(dat_cast, .(age, genotype, utr, replicate), summarize,
techMean = mean(ratio_norm))
# Set up a group for each of the three biological replicates:
sum_dat$group <- paste0(sum_dat$genotype, " ", sum_dat$age, "d")
sum_dat$group <- factor(sum_dat$group, levels = c("wild-type 3d", "miR-34 3d",
"wild-type 20d", "miR-34 20d"))
# Chunk 6
dat_mutUTR <- ddply(sum_dat[sum_dat$utr=="mutated",], .(age, genotype, group), summarize,
mean = mean(techMean),
sd = sd(techMean),
n = length(techMean))
# Add max and min as the standard error (sd/sqrt(n))
dat_mutUTR$se_max <- dat_mutUTR$mean + dat_mutUTR$sd/sqrt(dat_mutUTR$n)
dat_mutUTR$se_min <- dat_mutUTR$mean - dat_mutUTR$sd/sqrt(dat_mutUTR$n)
dat_mutUTR
# Chunk 7
# Two way with interaction:
fit <- aov(techMean ~ genotype * age,
data = sum_dat[sum_dat$utr=="mutated",])
summary(fit)
post_test <- TukeyHSD(fit)
post_test
leveneTest(techMean ~ genotype * age,
data = sum_dat[sum_dat$utr=="mutated",])
shapiro.test(fit$residuals)
# One way
fit <- aov(techMean ~ group,
data = sum_dat[sum_dat$utr=="mutated",])
summary(fit)
post_test <- TukeyHSD(fit)
post_test
leveneTest(techMean ~ group,
data = sum_dat[sum_dat$utr=="mutated",])
shapiro.test(fit$residuals)
# Chunk 8
theme_Publication <- function(base_size=14, base_family="Arial") {
library(grid)
library(ggthemes)
(theme_foundation(base_size=base_size, base_family=base_family)
+ theme(plot.title = element_text(face = "bold",
size = rel(1.2), hjust = 0.5),
text = element_text(),
panel.background = element_rect(colour = NA),
plot.background = element_rect(colour = NA),
panel.border = element_rect(colour = NA),
axis.title = element_text(face = "bold",size = rel(1)),
axis.title.y = element_text(angle=90,vjust =2),
axis.title.x = element_text(vjust = -0.2),
axis.text = element_text(),
axis.line = element_line(colour="#000000"),
axis.ticks = element_line(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.key = element_rect(colour = NA),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.size= unit(0.2, "cm"),
#legend.margin = unit(0, "cm"),
legend.title = element_text(face="italic"),
plot.margin=unit(c(10,5,5,5),"mm"),
strip.background=element_rect(colour="#f0f0f0",fill="#f0f0f0"),
strip.text = element_text(face="bold")
))
}
dat_mutUTR$adjMean <- dat_mutUTR$mean/dat_mutUTR$mean[1]
dat_mutUTR$adjSd <- dat_mutUTR$sd/dat_mutUTR$mean[1]
dat_mutUTR$adjSe_max <- dat_mutUTR$adjMean + dat_mutUTR$adjSd/sqrt(dat_mutUTR$n)
dat_mutUTR$adjSe_min <- dat_mutUTR$adjMean - dat_mutUTR$adjSd/sqrt(dat_mutUTR$n)
i <- ggplot(dat_mutUTR, aes(x=group, y=adjMean))
i <- i + geom_bar(stat = "identity")
i <- i + geom_errorbar(aes(ymin=dat_mutUTR$adjSe_min,
ymax=dat_mutUTR$adjSe_max,
width=.33))
i <- i + xlab("") + ylab("Su(z)12 normalized to tubulin")
i <- i + ggtitle("Brain Su(z)12 C-term sm HA levels")
i <- i + scale_x_discrete(labels = c(bquote(atop(italic("wild-type"), "3d")),
bquote(atop(italic("miR-34"*Delta), " 3d")),
bquote(atop(italic("wild-type"), "20d")),
bquote(atop(italic("miR-34"*Delta), " 20d"))))
i <- i + scale_y_continuous(breaks=c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5),
limits=c(0, 1.45))
i
i <- ggplot(dat_mutUTR, aes(x=group, y=adjMean))
i <- i + geom_bar(stat = "identity")
i <- i + geom_errorbar(aes(ymin=dat_mutUTR$adjSe_min,
ymax=dat_mutUTR$adjSe_max,
width=.33))
i <- i + xlab("") + ylab("Su(z)12 normalized to tubulin")
i <- i + ggtitle("Brain Su(z)12 C-term sm HA levels")
i <- i + scale_x_discrete(labels = c(bquote(atop(italic("wild-type"), "3d")),
bquote(atop(italic("miR-34"*Delta), " 3d")),
bquote(atop(italic("wild-type"), "20d")),
bquote(atop(italic("miR-34"*Delta), " 20d"))))
i <- i + scale_y_continuous(breaks=c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5),
limits=c(0, 1.45))
i
i <- ggplot(dat_mutUTR, aes(x=group, y=adjMean))
i <- i + geom_bar(stat = "identity")
i <- i + geom_errorbar(aes(ymin=dat_mutUTR$adjSe_min,
ymax=dat_mutUTR$adjSe_max,
width=.33))
i <- i + xlab("") + ylab("Su(z)12 normalized to tubulin")
i <- i + ggtitle("Brain Su(z)12 C-term sm HA levels")
i
i <- i + theme_Publication()
i <- i + scale_x_discrete(labels = c(bquote(atop(italic("wild-type"), "3d")),
bquote(atop(italic("miR-34"*Delta), " 3d")),
bquote(atop(italic("wild-type"), "20d")),
bquote(atop(italic("miR-34"*Delta), " 20d"))))
i <- i + scale_y_continuous(breaks=c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5),
limits=c(0, 1.45))
i
ggsave("Fig_3D_resub.jpg", i, height = 4, width = 5)
rm(list=ls())
setwd("~/Box Sync/ngs/GO_holistic")
Ez_dat <- read.csv("~/Box Sync/ngs/GO_holistic/EzCalledDE.csv",
stringsAsFactors = F)
age_dat <- read.csv("~/Box Sync/ngs/GO_holistic/AgeCalledDE.csv",
stringsAsFactors = F)
Ez_called_up <- Ez_dat[Ez_dat$log2FoldChange > 0.5,]
dim(Ez_called_up)
Ez_called_dn <- Ez_dat[Ez_dat$log2FoldChange < -0.5,]
dim(Ez_called_dn)
age_called_up <- age_dat[age_dat$log2FoldChange > 0.5,]
dim(age_called_up)
age_called_dn <- age_dat[age_dat$log2FoldChange < -0.5,]
dim(age_called_dn)
up_in_Ez_dn_with_age <- intersect(Ez_called_up$X, age_called_dn$X)
dn_in_Ez_up_with_age <- intersect(Ez_called_dn$X, age_called_up$X)
Ez_called_up[Ez_called_up$X %in% up_in_Ez_dn_with_age,]
dn_in_Ez_up_with_age <- intersect(Ez_called_dn$X, age_called_up$X)
Ez_called_up[Ez_called_up$X %in% dn_in_Ez_up_with_age,]
dn_in_Ez_up_with_age <- intersect(Ez_called_dn$X, age_called_up$X)
dn_in_Ez_up_with_age
Ez_called_dn[Ez_called_dn$X %in% dn_in_Ez_up_with_age,]
up_in_Ez_up_with_age <- intersect(Ez_called_up$X, age_called_dn$X)
up_in_Ez_up_with_age
up_in_Ez_up_with_age <- intersect(Ez_called_up$X, age_called_up$X)
up_in_Ez_up_with_age
Ez_called_up[Ez_called_up$X %in% up_in_Ez_up_with_age,]
dn_in_Ez_dn_with_age <- intersect(Ez_called_dn$X, age_called_dn$X)
dn_in_Ez_dn_with_age
Ez_called_dn[Ez_called_dn$X %in% dn_in_Ez_dn_with_age,]
?draw.quad.venn
library(VennDiagram)
length(up_in_Ez_dn_with_age
)
length(dn_in_Ez_up_with_age)
length(up_in_Ez_up_with_age)
length(dn_in_Ez_dn_with_age)
